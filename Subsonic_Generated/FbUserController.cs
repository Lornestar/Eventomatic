using System; 
using System.Text; 
using System.Data;
using System.Data.SqlClient;
using System.Data.Common;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Configuration; 
using System.Xml; 
using System.Xml.Serialization;
using SubSonic; 
using SubSonic.Utilities;
// <auto-generated />
namespace Eventomatic_DB
{
    /// <summary>
    /// Controller class for FB_Users
    /// </summary>
    [System.ComponentModel.DataObject]
    public partial class FbUserController
    {
        // Preload our schema..
        FbUser thisSchemaLoad = new FbUser();
        private string userName = String.Empty;
        protected string UserName
        {
            get
            {
				if (userName.Length == 0) 
				{
    				if (System.Web.HttpContext.Current != null)
    				{
						userName=System.Web.HttpContext.Current.User.Identity.Name;
					}
					else
					{
						userName=System.Threading.Thread.CurrentPrincipal.Identity.Name;
					}
				}
				return userName;
            }
        }
        [DataObjectMethod(DataObjectMethodType.Select, true)]
        public FbUserCollection FetchAll()
        {
            FbUserCollection coll = new FbUserCollection();
            Query qry = new Query(FbUser.Schema);
            coll.LoadAndCloseReader(qry.ExecuteReader());
            return coll;
        }
        [DataObjectMethod(DataObjectMethodType.Select, false)]
        public FbUserCollection FetchByID(object FBid)
        {
            FbUserCollection coll = new FbUserCollection().Where("FBid", FBid).Load();
            return coll;
        }
		
		[DataObjectMethod(DataObjectMethodType.Select, false)]
        public FbUserCollection FetchByQuery(Query qry)
        {
            FbUserCollection coll = new FbUserCollection();
            coll.LoadAndCloseReader(qry.ExecuteReader()); 
            return coll;
        }
        [DataObjectMethod(DataObjectMethodType.Delete, true)]
        public bool Delete(object FBid)
        {
            return (FbUser.Delete(FBid) == 1);
        }
        [DataObjectMethod(DataObjectMethodType.Delete, false)]
        public bool Destroy(object FBid)
        {
            return (FbUser.Destroy(FBid) == 1);
        }
        
        
    	
	    /// <summary>
	    /// Inserts a record, can be used with the Object Data Source
	    /// </summary>
        [DataObjectMethod(DataObjectMethodType.Insert, true)]
	    public void Insert(long FBid,string FirstName,string LastName,string Email,DateTime SignedUp,DateTime LastChange,int? ResourceKey,bool? Admin,string IpAddress,string SessionKey,string AccessToken,long? Referral,string ReferralEmail,decimal? ReferralRate,bool? IsSpy,bool? GetNavigate,int? PFCurrentResource,string Password)
	    {
		    FbUser item = new FbUser();
		    
            item.FBid = FBid;
            
            item.FirstName = FirstName;
            
            item.LastName = LastName;
            
            item.Email = Email;
            
            item.SignedUp = SignedUp;
            
            item.LastChange = LastChange;
            
            item.ResourceKey = ResourceKey;
            
            item.Admin = Admin;
            
            item.IpAddress = IpAddress;
            
            item.SessionKey = SessionKey;
            
            item.AccessToken = AccessToken;
            
            item.Referral = Referral;
            
            item.ReferralEmail = ReferralEmail;
            
            item.ReferralRate = ReferralRate;
            
            item.IsSpy = IsSpy;
            
            item.GetNavigate = GetNavigate;
            
            item.PFCurrentResource = PFCurrentResource;
            
            item.Password = Password;
            
	    
		    item.Save(UserName);
	    }
    	
	    /// <summary>
	    /// Updates a record, can be used with the Object Data Source
	    /// </summary>
        [DataObjectMethod(DataObjectMethodType.Update, true)]
	    public void Update(long FBid,string FirstName,string LastName,string Email,DateTime SignedUp,DateTime LastChange,int? ResourceKey,bool? Admin,string IpAddress,string SessionKey,string AccessToken,long? Referral,string ReferralEmail,decimal? ReferralRate,bool? IsSpy,bool? GetNavigate,int? PFCurrentResource,string Password)
	    {
		    FbUser item = new FbUser();
	        item.MarkOld();
	        item.IsLoaded = true;
		    
			item.FBid = FBid;
				
			item.FirstName = FirstName;
				
			item.LastName = LastName;
				
			item.Email = Email;
				
			item.SignedUp = SignedUp;
				
			item.LastChange = LastChange;
				
			item.ResourceKey = ResourceKey;
				
			item.Admin = Admin;
				
			item.IpAddress = IpAddress;
				
			item.SessionKey = SessionKey;
				
			item.AccessToken = AccessToken;
				
			item.Referral = Referral;
				
			item.ReferralEmail = ReferralEmail;
				
			item.ReferralRate = ReferralRate;
				
			item.IsSpy = IsSpy;
				
			item.GetNavigate = GetNavigate;
				
			item.PFCurrentResource = PFCurrentResource;
				
			item.Password = Password;
				
	        item.Save(UserName);
	    }
    }
}
