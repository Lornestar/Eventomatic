using System; 
using System.Text; 
using System.Data;
using System.Data.SqlClient;
using System.Data.Common;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Configuration; 
using System.Xml; 
using System.Xml.Serialization;
using SubSonic; 
using SubSonic.Utilities;
// <auto-generated />
namespace Eventomatic_DB{
    /// <summary>
    /// Strongly-typed collection for the VwAttendeeListTransaction class.
    /// </summary>
    [Serializable]
    public partial class VwAttendeeListTransactionCollection : ReadOnlyList<VwAttendeeListTransaction, VwAttendeeListTransactionCollection>
    {        
        public VwAttendeeListTransactionCollection() {}
    }
    /// <summary>
    /// This is  Read-only wrapper class for the vw_Attendee_List_Transactions view.
    /// </summary>
    [Serializable]
    public partial class VwAttendeeListTransaction : ReadOnlyRecord<VwAttendeeListTransaction>, IReadOnlyRecord
    {
    
	    #region Default Settings
	    protected static void SetSQLProps() 
	    {
		    GetTableSchema();
	    }
	    #endregion
        #region Schema Accessor
	    public static TableSchema.Table Schema
        {
            get
            {
                if (BaseSchema == null)
                {
                    SetSQLProps();
                }
                return BaseSchema;
            }
        }
    	
        private static void GetTableSchema() 
        {
            if(!IsSchemaInitialized)
            {
                //Schema declaration
                TableSchema.Table schema = new TableSchema.Table("vw_Attendee_List_Transactions", TableType.View, DataService.GetInstance("Eventomatic"));
                schema.Columns = new TableSchema.TableColumnCollection();
                schema.SchemaName = @"dbo";
                //columns
                
                TableSchema.TableColumn colvarEventKey = new TableSchema.TableColumn(schema);
                colvarEventKey.ColumnName = "Event_Key";
                colvarEventKey.DataType = DbType.Int32;
                colvarEventKey.MaxLength = 0;
                colvarEventKey.AutoIncrement = false;
                colvarEventKey.IsNullable = false;
                colvarEventKey.IsPrimaryKey = false;
                colvarEventKey.IsForeignKey = false;
                colvarEventKey.IsReadOnly = false;
                
                schema.Columns.Add(colvarEventKey);
                
                TableSchema.TableColumn colvarFbidSeller = new TableSchema.TableColumn(schema);
                colvarFbidSeller.ColumnName = "fbid_Seller";
                colvarFbidSeller.DataType = DbType.Int64;
                colvarFbidSeller.MaxLength = 0;
                colvarFbidSeller.AutoIncrement = false;
                colvarFbidSeller.IsNullable = true;
                colvarFbidSeller.IsPrimaryKey = false;
                colvarFbidSeller.IsForeignKey = false;
                colvarFbidSeller.IsReadOnly = false;
                
                schema.Columns.Add(colvarFbidSeller);
                
                TableSchema.TableColumn colvarFbidBuyer = new TableSchema.TableColumn(schema);
                colvarFbidBuyer.ColumnName = "fbid_Buyer";
                colvarFbidBuyer.DataType = DbType.Int64;
                colvarFbidBuyer.MaxLength = 0;
                colvarFbidBuyer.AutoIncrement = false;
                colvarFbidBuyer.IsNullable = true;
                colvarFbidBuyer.IsPrimaryKey = false;
                colvarFbidBuyer.IsForeignKey = false;
                colvarFbidBuyer.IsReadOnly = false;
                
                schema.Columns.Add(colvarFbidBuyer);
                
                TableSchema.TableColumn colvarGuestListFirstName = new TableSchema.TableColumn(schema);
                colvarGuestListFirstName.ColumnName = "GuestList_First_Name";
                colvarGuestListFirstName.DataType = DbType.String;
                colvarGuestListFirstName.MaxLength = 200;
                colvarGuestListFirstName.AutoIncrement = false;
                colvarGuestListFirstName.IsNullable = true;
                colvarGuestListFirstName.IsPrimaryKey = false;
                colvarGuestListFirstName.IsForeignKey = false;
                colvarGuestListFirstName.IsReadOnly = false;
                
                schema.Columns.Add(colvarGuestListFirstName);
                
                TableSchema.TableColumn colvarGuestListLastName = new TableSchema.TableColumn(schema);
                colvarGuestListLastName.ColumnName = "GuestList_Last_Name";
                colvarGuestListLastName.DataType = DbType.String;
                colvarGuestListLastName.MaxLength = 200;
                colvarGuestListLastName.AutoIncrement = false;
                colvarGuestListLastName.IsNullable = true;
                colvarGuestListLastName.IsPrimaryKey = false;
                colvarGuestListLastName.IsForeignKey = false;
                colvarGuestListLastName.IsReadOnly = false;
                
                schema.Columns.Add(colvarGuestListLastName);
                
                TableSchema.TableColumn colvarAmount = new TableSchema.TableColumn(schema);
                colvarAmount.ColumnName = "Amount";
                colvarAmount.DataType = DbType.Currency;
                colvarAmount.MaxLength = 0;
                colvarAmount.AutoIncrement = false;
                colvarAmount.IsNullable = false;
                colvarAmount.IsPrimaryKey = false;
                colvarAmount.IsForeignKey = false;
                colvarAmount.IsReadOnly = false;
                
                schema.Columns.Add(colvarAmount);
                
                TableSchema.TableColumn colvarInitDate = new TableSchema.TableColumn(schema);
                colvarInitDate.ColumnName = "Init_Date";
                colvarInitDate.DataType = DbType.DateTime;
                colvarInitDate.MaxLength = 0;
                colvarInitDate.AutoIncrement = false;
                colvarInitDate.IsNullable = false;
                colvarInitDate.IsPrimaryKey = false;
                colvarInitDate.IsForeignKey = false;
                colvarInitDate.IsReadOnly = false;
                
                schema.Columns.Add(colvarInitDate);
                
                TableSchema.TableColumn colvarConfirmationDate = new TableSchema.TableColumn(schema);
                colvarConfirmationDate.ColumnName = "Confirmation_Date";
                colvarConfirmationDate.DataType = DbType.DateTime;
                colvarConfirmationDate.MaxLength = 0;
                colvarConfirmationDate.AutoIncrement = false;
                colvarConfirmationDate.IsNullable = true;
                colvarConfirmationDate.IsPrimaryKey = false;
                colvarConfirmationDate.IsForeignKey = false;
                colvarConfirmationDate.IsReadOnly = false;
                
                schema.Columns.Add(colvarConfirmationDate);
                
                TableSchema.TableColumn colvarTxKey = new TableSchema.TableColumn(schema);
                colvarTxKey.ColumnName = "Tx_Key";
                colvarTxKey.DataType = DbType.Int32;
                colvarTxKey.MaxLength = 0;
                colvarTxKey.AutoIncrement = false;
                colvarTxKey.IsNullable = false;
                colvarTxKey.IsPrimaryKey = false;
                colvarTxKey.IsForeignKey = false;
                colvarTxKey.IsReadOnly = false;
                
                schema.Columns.Add(colvarTxKey);
                
                TableSchema.TableColumn colvarServiceFee = new TableSchema.TableColumn(schema);
                colvarServiceFee.ColumnName = "Service_Fee";
                colvarServiceFee.DataType = DbType.Currency;
                colvarServiceFee.MaxLength = 0;
                colvarServiceFee.AutoIncrement = false;
                colvarServiceFee.IsNullable = true;
                colvarServiceFee.IsPrimaryKey = false;
                colvarServiceFee.IsForeignKey = false;
                colvarServiceFee.IsReadOnly = false;
                
                schema.Columns.Add(colvarServiceFee);
                
                TableSchema.TableColumn colvarPrice = new TableSchema.TableColumn(schema);
                colvarPrice.ColumnName = "Price";
                colvarPrice.DataType = DbType.Currency;
                colvarPrice.MaxLength = 0;
                colvarPrice.AutoIncrement = false;
                colvarPrice.IsNullable = true;
                colvarPrice.IsPrimaryKey = false;
                colvarPrice.IsForeignKey = false;
                colvarPrice.IsReadOnly = false;
                
                schema.Columns.Add(colvarPrice);
                
                TableSchema.TableColumn colvarPaypalFee = new TableSchema.TableColumn(schema);
                colvarPaypalFee.ColumnName = "Paypal_Fee";
                colvarPaypalFee.DataType = DbType.Decimal;
                colvarPaypalFee.MaxLength = 0;
                colvarPaypalFee.AutoIncrement = false;
                colvarPaypalFee.IsNullable = true;
                colvarPaypalFee.IsPrimaryKey = false;
                colvarPaypalFee.IsForeignKey = false;
                colvarPaypalFee.IsReadOnly = false;
                
                schema.Columns.Add(colvarPaypalFee);
                
                TableSchema.TableColumn colvarRevenue = new TableSchema.TableColumn(schema);
                colvarRevenue.ColumnName = "Revenue";
                colvarRevenue.DataType = DbType.Decimal;
                colvarRevenue.MaxLength = 0;
                colvarRevenue.AutoIncrement = false;
                colvarRevenue.IsNullable = true;
                colvarRevenue.IsPrimaryKey = false;
                colvarRevenue.IsForeignKey = false;
                colvarRevenue.IsReadOnly = false;
                
                schema.Columns.Add(colvarRevenue);
                
                TableSchema.TableColumn colvarCurrency = new TableSchema.TableColumn(schema);
                colvarCurrency.ColumnName = "Currency";
                colvarCurrency.DataType = DbType.String;
                colvarCurrency.MaxLength = 3;
                colvarCurrency.AutoIncrement = false;
                colvarCurrency.IsNullable = false;
                colvarCurrency.IsPrimaryKey = false;
                colvarCurrency.IsForeignKey = false;
                colvarCurrency.IsReadOnly = false;
                
                schema.Columns.Add(colvarCurrency);
                
                TableSchema.TableColumn colvarMerchantFee = new TableSchema.TableColumn(schema);
                colvarMerchantFee.ColumnName = "Merchant_Fee";
                colvarMerchantFee.DataType = DbType.Currency;
                colvarMerchantFee.MaxLength = 0;
                colvarMerchantFee.AutoIncrement = false;
                colvarMerchantFee.IsNullable = true;
                colvarMerchantFee.IsPrimaryKey = false;
                colvarMerchantFee.IsForeignKey = false;
                colvarMerchantFee.IsReadOnly = false;
                
                schema.Columns.Add(colvarMerchantFee);
                
                TableSchema.TableColumn colvarGroupstoreProfit = new TableSchema.TableColumn(schema);
                colvarGroupstoreProfit.ColumnName = "Groupstore_Profit";
                colvarGroupstoreProfit.DataType = DbType.Currency;
                colvarGroupstoreProfit.MaxLength = 0;
                colvarGroupstoreProfit.AutoIncrement = false;
                colvarGroupstoreProfit.IsNullable = true;
                colvarGroupstoreProfit.IsPrimaryKey = false;
                colvarGroupstoreProfit.IsForeignKey = false;
                colvarGroupstoreProfit.IsReadOnly = false;
                
                schema.Columns.Add(colvarGroupstoreProfit);
                
                TableSchema.TableColumn colvarGroupstoreProfitAdjusted = new TableSchema.TableColumn(schema);
                colvarGroupstoreProfitAdjusted.ColumnName = "Groupstore_Profit_Adjusted";
                colvarGroupstoreProfitAdjusted.DataType = DbType.Decimal;
                colvarGroupstoreProfitAdjusted.MaxLength = 0;
                colvarGroupstoreProfitAdjusted.AutoIncrement = false;
                colvarGroupstoreProfitAdjusted.IsNullable = true;
                colvarGroupstoreProfitAdjusted.IsPrimaryKey = false;
                colvarGroupstoreProfitAdjusted.IsForeignKey = false;
                colvarGroupstoreProfitAdjusted.IsReadOnly = false;
                
                schema.Columns.Add(colvarGroupstoreProfitAdjusted);
                
                TableSchema.TableColumn colvarResourceKey = new TableSchema.TableColumn(schema);
                colvarResourceKey.ColumnName = "Resource_Key";
                colvarResourceKey.DataType = DbType.Int32;
                colvarResourceKey.MaxLength = 0;
                colvarResourceKey.AutoIncrement = false;
                colvarResourceKey.IsNullable = true;
                colvarResourceKey.IsPrimaryKey = false;
                colvarResourceKey.IsForeignKey = false;
                colvarResourceKey.IsReadOnly = false;
                
                schema.Columns.Add(colvarResourceKey);
                
                
                BaseSchema = schema;
                //add this schema to the provider
                //so we can query it later
                DataService.Providers["Eventomatic"].AddSchema("vw_Attendee_List_Transactions",schema);
            }
        }
        #endregion
        
        #region Query Accessor
	    public static Query CreateQuery()
	    {
		    return new Query(Schema);
	    }
	    #endregion
	    
	    #region .ctors
	    public VwAttendeeListTransaction()
	    {
            SetSQLProps();
            SetDefaults();
            MarkNew();
        }
        public VwAttendeeListTransaction(bool useDatabaseDefaults)
	    {
		    SetSQLProps();
		    if(useDatabaseDefaults)
		    {
				ForceDefaults();
			}
			MarkNew();
	    }
	    
	    public VwAttendeeListTransaction(object keyID)
	    {
		    SetSQLProps();
		    LoadByKey(keyID);
	    }
    	 
	    public VwAttendeeListTransaction(string columnName, object columnValue)
        {
            SetSQLProps();
            LoadByParam(columnName,columnValue);
        }
        
	    #endregion
	    
	    #region Props
	    
          
        [XmlAttribute("EventKey")]
        [Bindable(true)]
        public int EventKey 
	    {
		    get
		    {
			    return GetColumnValue<int>("Event_Key");
		    }
            set 
		    {
			    SetColumnValue("Event_Key", value);
            }
        }
	      
        [XmlAttribute("FbidSeller")]
        [Bindable(true)]
        public long? FbidSeller 
	    {
		    get
		    {
			    return GetColumnValue<long?>("fbid_Seller");
		    }
            set 
		    {
			    SetColumnValue("fbid_Seller", value);
            }
        }
	      
        [XmlAttribute("FbidBuyer")]
        [Bindable(true)]
        public long? FbidBuyer 
	    {
		    get
		    {
			    return GetColumnValue<long?>("fbid_Buyer");
		    }
            set 
		    {
			    SetColumnValue("fbid_Buyer", value);
            }
        }
	      
        [XmlAttribute("GuestListFirstName")]
        [Bindable(true)]
        public string GuestListFirstName 
	    {
		    get
		    {
			    return GetColumnValue<string>("GuestList_First_Name");
		    }
            set 
		    {
			    SetColumnValue("GuestList_First_Name", value);
            }
        }
	      
        [XmlAttribute("GuestListLastName")]
        [Bindable(true)]
        public string GuestListLastName 
	    {
		    get
		    {
			    return GetColumnValue<string>("GuestList_Last_Name");
		    }
            set 
		    {
			    SetColumnValue("GuestList_Last_Name", value);
            }
        }
	      
        [XmlAttribute("Amount")]
        [Bindable(true)]
        public decimal Amount 
	    {
		    get
		    {
			    return GetColumnValue<decimal>("Amount");
		    }
            set 
		    {
			    SetColumnValue("Amount", value);
            }
        }
	      
        [XmlAttribute("InitDate")]
        [Bindable(true)]
        public DateTime InitDate 
	    {
		    get
		    {
			    return GetColumnValue<DateTime>("Init_Date");
		    }
            set 
		    {
			    SetColumnValue("Init_Date", value);
            }
        }
	      
        [XmlAttribute("ConfirmationDate")]
        [Bindable(true)]
        public DateTime? ConfirmationDate 
	    {
		    get
		    {
			    return GetColumnValue<DateTime?>("Confirmation_Date");
		    }
            set 
		    {
			    SetColumnValue("Confirmation_Date", value);
            }
        }
	      
        [XmlAttribute("TxKey")]
        [Bindable(true)]
        public int TxKey 
	    {
		    get
		    {
			    return GetColumnValue<int>("Tx_Key");
		    }
            set 
		    {
			    SetColumnValue("Tx_Key", value);
            }
        }
	      
        [XmlAttribute("ServiceFee")]
        [Bindable(true)]
        public decimal? ServiceFee 
	    {
		    get
		    {
			    return GetColumnValue<decimal?>("Service_Fee");
		    }
            set 
		    {
			    SetColumnValue("Service_Fee", value);
            }
        }
	      
        [XmlAttribute("Price")]
        [Bindable(true)]
        public decimal? Price 
	    {
		    get
		    {
			    return GetColumnValue<decimal?>("Price");
		    }
            set 
		    {
			    SetColumnValue("Price", value);
            }
        }
	      
        [XmlAttribute("PaypalFee")]
        [Bindable(true)]
        public decimal? PaypalFee 
	    {
		    get
		    {
			    return GetColumnValue<decimal?>("Paypal_Fee");
		    }
            set 
		    {
			    SetColumnValue("Paypal_Fee", value);
            }
        }
	      
        [XmlAttribute("Revenue")]
        [Bindable(true)]
        public decimal? Revenue 
	    {
		    get
		    {
			    return GetColumnValue<decimal?>("Revenue");
		    }
            set 
		    {
			    SetColumnValue("Revenue", value);
            }
        }
	      
        [XmlAttribute("Currency")]
        [Bindable(true)]
        public string Currency 
	    {
		    get
		    {
			    return GetColumnValue<string>("Currency");
		    }
            set 
		    {
			    SetColumnValue("Currency", value);
            }
        }
	      
        [XmlAttribute("MerchantFee")]
        [Bindable(true)]
        public decimal? MerchantFee 
	    {
		    get
		    {
			    return GetColumnValue<decimal?>("Merchant_Fee");
		    }
            set 
		    {
			    SetColumnValue("Merchant_Fee", value);
            }
        }
	      
        [XmlAttribute("GroupstoreProfit")]
        [Bindable(true)]
        public decimal? GroupstoreProfit 
	    {
		    get
		    {
			    return GetColumnValue<decimal?>("Groupstore_Profit");
		    }
            set 
		    {
			    SetColumnValue("Groupstore_Profit", value);
            }
        }
	      
        [XmlAttribute("GroupstoreProfitAdjusted")]
        [Bindable(true)]
        public decimal? GroupstoreProfitAdjusted 
	    {
		    get
		    {
			    return GetColumnValue<decimal?>("Groupstore_Profit_Adjusted");
		    }
            set 
		    {
			    SetColumnValue("Groupstore_Profit_Adjusted", value);
            }
        }
	      
        [XmlAttribute("ResourceKey")]
        [Bindable(true)]
        public int? ResourceKey 
	    {
		    get
		    {
			    return GetColumnValue<int?>("Resource_Key");
		    }
            set 
		    {
			    SetColumnValue("Resource_Key", value);
            }
        }
	    
	    #endregion
    
	    #region Columns Struct
	    public struct Columns
	    {
		    
		    
            public static string EventKey = @"Event_Key";
            
            public static string FbidSeller = @"fbid_Seller";
            
            public static string FbidBuyer = @"fbid_Buyer";
            
            public static string GuestListFirstName = @"GuestList_First_Name";
            
            public static string GuestListLastName = @"GuestList_Last_Name";
            
            public static string Amount = @"Amount";
            
            public static string InitDate = @"Init_Date";
            
            public static string ConfirmationDate = @"Confirmation_Date";
            
            public static string TxKey = @"Tx_Key";
            
            public static string ServiceFee = @"Service_Fee";
            
            public static string Price = @"Price";
            
            public static string PaypalFee = @"Paypal_Fee";
            
            public static string Revenue = @"Revenue";
            
            public static string Currency = @"Currency";
            
            public static string MerchantFee = @"Merchant_Fee";
            
            public static string GroupstoreProfit = @"Groupstore_Profit";
            
            public static string GroupstoreProfitAdjusted = @"Groupstore_Profit_Adjusted";
            
            public static string ResourceKey = @"Resource_Key";
            
	    }
	    #endregion
	    
	    
	    #region IAbstractRecord Members
        public new CT GetColumnValue<CT>(string columnName) {
            return base.GetColumnValue<CT>(columnName);
        }
        public object GetColumnValue(string columnName) {
            return base.GetColumnValue<object>(columnName);
        }
        #endregion
	    
    }
}
